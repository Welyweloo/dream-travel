{% extends 'base.html.twig' %}

{% block title %}{{ parent() }} Résultats{% endblock %}

{% block stylesheets %}

<!-- Stylesheet GOOGLE FONT -->
<link href="https://fonts.googleapis.com/css2?family=Caveat:wght@400;700&family=Yeseva+One&display=swap"
    rel="stylesheet">

<!-- Stylesheet BOOTSTRAP -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
    integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">

<link rel="stylesheet" href="{{ asset('css/style-city-list.css') }}" crossorigin="" />

{% endblock %}

{% block container %}

<div class="city-list-result">

    <h1>Liste des destinations</h1>
    <p class="intro">Selon les critères sélectionnés, nous pouvons suggérer les villes suivantes pour vos prochaines
        vacances:</p>
    {% if not app.user %}
    <p class="anonymous">En vous <a href="{{ path('app_register') }}">inscrivant</a>, vous pourrez sauvegarder ces
        informations dans une bucketlist.</p>
    {% endif %}
     {% dump(arrayMatching) %}
    {% for result in arrayMatching|sort((a, b) => b.value <=> a.value)|slice(0,8) %}
   
    <a href="{{ path('city_show', { geonameId : result.city.geonameId }) }}">
        <div class="city-card" data-name="{{ result.city.cityName }}" data-geonameid="{{ result.city.geonameId }}">
            <img class="city-img" src="" alt="Image de {{ result.city.cityName }}"
                onerror="this.src='{{ asset('images/loader.gif') }}'" />
            <p class="city-name">{{ result.city.cityName }}</p>
        </div>
    </a>
    {% endfor %}


    {% if app.user %}
    {% if app.request.headers.get('referer') != 'http://localhost:8000/city/list/' ~ app.user.id %}
    <div class="bg-light p-4 mb-4 border">
        {{ include('city_list/_form.html.twig') }}
        <div id="message-save"></div>
    </div>
    {% endif %}
    {% endif %}



</div>

{% endblock %}


{% block javascripts %}

{{ parent() }}
<script>
    let currentUrl = document.location.href;
    //(' URL : \n' +urlcourante);  

    let btnSave = document.getElementById("save_list");

    if(btnSave !=  null){
        btnSave.addEventListener('click', function (evt) {
            evt.preventDefault();
            let inputSave = document.getElementById('city_list_name').value;
            let dataSave =
            {
                url: currentUrl,
                titleList: inputSave
            };
            fetch('/api/v1/save-list', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(dataSave),
            })
    
                .then(
                    (response) => {
                        return response.status == 200 ?
                            (
                                console.log(response.status + ' - envoi effectué'),
                                response.json()
                            )
    
                            :
                            (response.status === 201) ? response.status
    
                                :
                                console.log('')
    
                    })
                .then(
                    (dataSave) => {
                        console.log('hello');
                        document.getElementById('message-save').innerHTML = '<div class="alert alert-succes">Liste sauvegardée!</div>';
    
    
                    }
                );
        })
    
    }

    
    let cities = document.querySelectorAll('.city-card');

    let cityName = '';
    let cityId = '';
    cities.forEach(

        function (city) {
            let cityName = city.dataset.name;
            //cityName = cityName.replace(/\s/g,'');
            cityName = cityName.replace(/\s/g, '-');
            let cityId = city.dataset.geonameid;


            // Récupération des images de ville

            fetch('/api/v1/image/' + cityName)
                .then(
                    (response) => {
                        return response.status == 200 ?
                            (
                                //console.log(response.status + ' - opération effectué'),
                                response.json()
                            )

                            :
                            (response.status === 204) ? response.status + ' - pas de resultats'

                                :
                                console.log('L\'opération a échoué')
                    })
                .then(
                    (data) => {
                        let imageElement = city.querySelector('img');
                        imageElement.setAttribute('src', data.thumb)


                    }
                );

        }
    )


</script>

{% endblock %}      