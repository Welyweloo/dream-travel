{% extends 'base.html.twig' %}

{% block title %}{{ parent() }}Fiche de NOM_DE_VILLE {% endblock %}
{% block stylesheets %}

{{ parent() }}
<!-- Stylesheet LEAFLET -->
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
  integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
  crossorigin=""></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
  integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
  crossorigin="" />

{% endblock %}
{% block container %}

{# APi pour le like de une ville #}
{# POST => http://localhost:8000/api/v1/city/{cityID}/like  |  par ex: cityId paris = 1035 #}

<div class="cityTemplate">

  <aside class="left-side" id="left-aside">

    <div class="city-likes d-flex justify-content-end" data-cityid="{{ city.id }}">
      <span class="like city-like" data-like="">
        <i class="fa fa-heart-o" aria-role="presentation"></i>
      </span>
    </div>

    <div class="header-city-informations city-title">
      <img src="{{ urlImage.thumb|default('#') }}" alt="Image de {{city.cityName}}" class="img-thumbnail" />
      <h1 id="h1-city">{{city.cityName}}</h1>
    </div>

    {% set currentMonth = "now"|date("m") %}
    {% if app.session.get('startDate') is not defined %}
    <div class="header-city-informations meteo">
      <p class="mb-0 date">{{"now"|format_datetime('medium', 'none', locale='fr') }}</p>
  
      {% for weather in city.weather %}
        {% if 03 == weather.month %}
          <div class="min-temperature">
            <img src="{{ asset('images/weather_images/levelTemp_' ~ weather.tempLevelMin) ~ '.png'}}"
              class="thermo-img thermo-min" alt="Thermomètre" /> Min {{ weather.averageMin }}°C •
          </div>
          <div class="max-temperature">
            Max {{ weather.averageMax }}°C <img
              src="{{ asset('images/weather_images/levelTemp_' ~ weather.tempLevelMax) ~ '.png'}}"
              class="thermo-img thermo-max" alt="Thermomètre" />
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {% else %}
      <div class="header-city-informations meteo">
      <p class="mb-0 date-start">{{ app.session.get('startDate')|format_datetime('medium', 'none', locale='fr') }}</p>
      <p class="mb-0 date-end">- {{ app.session.get('endDate')|format_datetime('medium', 'none', locale='fr') }}</p>

      {% for weather in city.weather %}
      {% if 03 == weather.month %}
      <div class="min-temperature">
        <img src="{{ asset('images/weather_images/levelTemp_' ~ weather.tempLevelMin) ~ '.png'}}"
          class="thermo-img thermo-min" alt="Thermomètre" /> Min {{ weather.averageMin }}°C •
      </div>
      <div class="max-temperature">
        Max {{ weather.averageMax }}°C <img
          src="{{ asset('images/weather_images/levelTemp_' ~ weather.tempLevelMax) ~ '.png'}}"
          class="thermo-img thermo-max" alt="Thermomètre" />
      </div>
      {% endif %}


      {% endfor %}
    </div>
    {% endif %}

    <div class="city-basic-datas">
      {% set categoryScores = {'Transport': 4, 'Loisirs et Culture': 14, 'Sécurité': 7, 'Coût de la vie': 1, 'Environnement': 10, 'Tolérance': 15, 'Accès internet': 13} %}
      {% for category, score in categoryScores %}
      <p class="mb-2">{{ category }}</p>
      <div class="progress">
        {% if cityScores is not null %}
        <div class="progress-bar" role="progressbar"
          style="width: {{ cityScores.categories[score].score_out_of_10 * 10 }}%"
          aria-valuenow="{{ cityScores.categories[score].score_out_of_10 * 10 }}" aria-valuemin="0" aria-valuemax="100">
        </div>
        {% else %}

        <div class="progress-bar" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0"
          aria-valuemax="100">
        </div>

        {% endif %}
      </div>
      {% endfor %}
    </div>
  </aside>

  <div id="center-div">
    <h2 class="text-center">Informations sur la ville</h2>


    <!-- Leaflet Maps-->
    <div id="leaflet-maps">
      <div id="mapid" data-longitude="{{ cityUrbanArea.location.latlon.longitude }}"
        data-latitude="{{ cityUrbanArea.location.latlon.latitude }}"></div>
    </div>
    <!-- End Leaflet Maps-->

      {% if cityScores is not null %}
    <div class="city-description text-justify" data-summary="{{ cityScores.summary|raw }}">
      {{ cityScores.summary|raw }}
        </div>
      {% endif %}



    <div class="tags-container">
      <ul class="tags-list p-0">
        {% for tag in city.tag %}
        <li><span class="badge badge-pill badge-secondary badge-tag font-weight-bold shadow-sm"
            style="background-color:#{{tag.color }} ;text-shadow: 1px 1px 5px #000000;">{{ tag.label }}</span></li>
        {% endfor %}
      </ul>
    </div>

    <hr class="hr-city-description">
  </div>

  <aside class="right-side" id="right-aside">
    <h2 class="text-center">Galerie Photo</h2>

    <div id="carouselExampleIndicators" class="carousel">

      <div class="carousel-inner">
        <div class="carousel-item active">
          <div class="city-pictures text-center img-gallery">
            {% for image in randomImagesArray|slice(0, 9) %}
            <img id="{{ 'image' ~ random(1,50000) }}" src="{{ image.small }}" alt="Image de Paris"
              class="img-thumbnail img-carousel" />
            {% endfor %}
          </div>
        </div>
        <div class="carousel-item">
          <div class="city-pictures text-center">
            <div class="city-pictures text-center img-gallery">
              {% for image in randomImagesArray|slice(9, 18) %}
              <img id="{{ 'image' ~ random(1,50000) }}" src="{{ image.thumb }}" alt="Image de Paris" class="img-thumbnail img-carousel" />
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
      <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
      </ol>
    </div>

    <!-- The Modal -->
    <div id="myModal" class="modal">
      <span class="close">&times;</span>
      <img class="modal-content" id="img01">
     {#  <div id="caption"></div> #}
    </div>

    <hr class="hr-city-description">
    <div class="card card-form form-review-container">
      <h2 class="h2-form-title">Avez-vous déjà visité {{city.cityName}} ? </h2>
      {% if is_granted('IS_AUTHENTICATED_FULLY') %}
      {{ form_start(formReview, {'attr': {'id': 'form_review', 'autocomplete': 'off'}}) }}
      {{ form_widget(formReview) }}
      <button class="btn form-submit">{{ button_label|default('Envoyer mon avis') }}</button>
      {{ form_end(formReview) }}

      {% else %}
      <div class="alert alert-info">Veuillez vous
        <a href="{{ path('app_login') }}" class="alert-link">connecter </a> pour rédiger un avis.
      </div>
      {% endif %}

    </div>
    <h2 class="text-center">Avis des utilisateurs</h2>

    <div class="review-div">
      <!-- Beginning Caroussel -->
      <div id="carouselExampleIndicators-review" class="carousel slide">
        <div class="carousel-inner">
          <div class="carousel-item active">

            {% if not is_granted('IS_AUTHENTICATED_FULLY') %}
            {% set max = 5 %}
            {% if reviews|length > max %}
            {% set seeMoreContent = true %}
            {% endif %}
            {% elseif is_granted('IS_AUTHENTICATED_FULLY') %}
            {% set max = reviews|length %}
            {% endif %}
            {% for review in reviews|reverse|slice(0, max) %}
            <div class="accordion review-accordion" id="accordion-{{ review.id }}">
              <div class="card">
                <div class="card-header" id="headingOne">
                  <p class="report-button  m-0 text-right">
                    <a class="report-button py-0 m-0" data-toggle="collapse" href="#signal-{{ review.id }}"
                      role="button" aria-expanded="false" aria-controls="collapseExample">
                      ...
                    </a>
                  </p>
                  <div class="collapse text-center text-danger report-message mx-0" id="signal-{{ review.id }}">
                    <span class="span-review"><a href="{{ path('api_v1_review_report', {'id': review.id } ) }}" class="report-review-button" data-reviewId="{{ review.id }}"> <i class="em em-no_entry" aria-role="presentation"
                          aria-label="NO ENTRY"></i>Avis inapproprié, je signale!</a></span>
                  </div>
                  <h3 class="card-title">
                      {% if review is defined %}
                      {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                      <a class="username" href="{{ path('user_show', { 'id': review.user.id}) }}"><img src="{{ asset('images/avatars/' ~ review.user.avatar) }}" alt="Photo de profil"
                        class="user-profile-picture" style="width:13%;"> {{ review.user.username }}</a>
                      {% else %}
                      <p class="m-0">{{ review.user.username }}</p>
                      {% endif %}

                      {# displays the highest level badge reached #}
                      {% set badgeLevel = [] %}
                      {% for key, badge in review.user.badge %}
                      {% set badgeLevel = badgeLevel|merge([badge.badgeString]) %}
                      {% endfor %}
                      {% for badge in review.user.badge %}
                      {% if badge.badgeString == max(badgeLevel) %}
                      <p class="user-points">
                      
                      {{ review.user.points|default(5)}} points
                      <img src="{{ asset('images/badges/' ~ badge.filename ~ '.svg' ) }}"
                          alt="Badge {{ badge.label }}" class="user-badge" /></p>
                           {% endif %}
                      {% endfor %}                 
                      {% endif %}
                  </h3>
                  <h4 class="card-badge"> </h4>

                  {% set difference = date(review.createdAt|date("Y/m/d")).diff(date('now'|date('Y/m/d'))) %}
                  {% set leftDays = difference.days %}
                  {% dump(leftDays) %}

                  <h4 class="h4-review"><em>Avis publié il y a {{ leftDays }} jour{% if leftDays > 1 %}s{% endif %}</em>
                  </h4>
                  <h4 class="h4-review"><strong>Visite effectuée</strong> le {{review.travelDate.date|date("d/m/Y")}}
                  </h4>
                  <h4>
                    <strong class="mr-2">Appréciation</strong>

                    {% set rateCircleFull = '<i class="fa fa-circle" aria-hidden="true"></i>' %}
                    {% set rateCircleEmpty = '<i class="fa fa-circle-thin" aria-hidden="true"></i>' %}
                    {% for i in 1..5 %}
                    {% if i <= review.rate  %}
                    {{ rateCircleFull|raw }}
                    {% else %}
                    {{ rateCircleEmpty|raw }}
                    {% endif %}

                    {% endfor %}

                  </h4>
                  <h2 class="mb-0">
                    <button class="btn btn-link btn-block text-center btn-see-more" type="button" data-toggle="collapse"
                      data-target="#collapse-{{ review.id }}" aria-expanded="true" aria-controls="collapseOne">
                      Voir plus...
                    </button>
                  </h2>
                </div>

                <div id="collapse-{{ review.id }}" class="collapse" aria-labelledby="headingOne"
                  data-parent="#accordion-{{ review.id }}">
                  <div class="card-body">

                    <!-- Default dropleft button -->
                    <p class="card-text text-justify">{{ review.text|nl2br }}</p>

                    <div class="review-votes d-flex justify-content-end">
                      <span class="review-vote like">
                        {% if app.user and review.isLikedByUser(app.user) %}
                          <i class="em em-heart" aria-role="presentation" data-reviewid="{{ review.id }}"></i>
                        {% else %}
                          <i class="fa fa-heart-o" aria-role="presentation" data-reviewid="{{ review.id }}"></i>
                        {% endif %}
                      </span>
                      <span class="span-rate" data-likesCount="{{ review.likes|length }}"></span>
                    </div>

                    <div class="city-pictures text-center">
                      {% for picture in review.picture %}
                      <img src="{{ asset('images/uploads/' ~ picture.filename) }}"
                        alt="Image de {{city.cityName}} postée par un utilisateur." class="user-image">
                      {% endfor %}

                    </div>
                  </div>
                </div>
              </div>
            </div>
            {% else %}
            <p class="text-center"><em>Il n'y a pas encore d'avis pour cette destination. Laissez-nous le vôtre!</em>
            </p>
            {% endfor %}
            {% if seeMoreContent is defined %}
            <div class="alert alert-info  mt-4">Veuillez vous
              <a href="{{ path('app_login') }}" class="alert-link">connecter </a> pour voir tous les avis.
            </div>
            {% else %}
            {% if is_granted('IS_AUTHENTICATED_FULLY')  %}
          </div>
        </div>
        <ol class="carousel-indicators">
          <li data-target="#carouselExampleIndicators-review" data- -to="0" class="active"></li>
          <li data-target="#carouselExampleIndicators-review" data- -to="1"></li>
          <li data-target="#carouselExampleIndicators-review" data- -to="2"></li>
        </ol>
      </div>
   {#    <ol class="carousel-indicators">
        <li data-target="#carouselExampleIndicators-review" data-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators-review" data-to="1"></li>
        <li data-target="#carouselExampleIndicators-review" data-to="2"></li>
      </ol> #}
      <!-- End Caroussel -->
    </div>
  </aside>

</div>
{% endif %}
{% endif %}
</aside>


{% dump(reviews) %}

  {% for review in reviews %}
    {{ dump(review) }}
  {% endfor %}

<style>

  .custom-file{
    z-index: 0;
  }
  
  #myImg {
    border-radius: 5px;
    cursor: pointer;
    transition: 0.3s;
  }

  #myImg:hover {
    opacity: 0.7;
  }

  /* The Modal (background) */
  .modal {
    display: none;
    /* Hidden by default */
    position: fixed;
    /* Stay in place */
    z-index: 1;
    /* Sit on top */
    padding-top: 100px;
    /* Location of the box */
    left: 0;
    top: 0;
    width: 100%;
    /* Full width */
    height: 100%;
    /* Full height */
    overflow: auto;
    /* Enable scroll if needed */
    background-color: rgb(0, 0, 0);
    /* Fallback color */
    background-color: rgba(0, 0, 0, 0.9);
    /* Black w/ opacity */
  }

  /* Modal Content (image) */
  .modal-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
  }

  /* Caption of Modal Image */
  #caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
  }

  /* Add Animation */
  .modal-content,
  #caption {
    -webkit-animation-name: zoom;
    -webkit-animation-duration: 0.6s;
    animation-name: zoom;
    animation-duration: 0.6s;
  }

  @-webkit-keyframes zoom {
    from {
      -webkit-transform: scale(0)
    }

    to {
      -webkit-transform: scale(1)
    }
  }

  @keyframes zoom {
    from {
      transform: scale(0)
    }

    to {
      transform: scale(1)
    }
  }

  /* The Close Button */
  .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
  }

  .close:hover,
  .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
  }

  /* 100% Image Width on Smaller Screens */
  @media only screen and (max-width: 700px) {
    .modal-content {
      width: 100%;
    }
  }
</style>

  {% endblock %}
  {% block javascripts %}


  {{ parent() }}
  <script src="{{ asset('js/app.js') }}" type="text/javascript"></script>

          {{ parent() }}
          <script src="{{ asset('js/app.js') }}" type="text/javascript"></script>
          
                      <!-- Script pour l'ajout d'un like User --> 
            <script>
                let div = document.getElementById('kevin-accordion');
                let reviewVote = div.querySelector('.review-vote');
                let emptyHeart = reviewVote.querySelector('.fa-heart-o');

                let fullHeart = reviewVote.querySelector('.em-heart');
                fullHeart.style.display = "none";

                function changeToFull() 
                {
                emptyHeart.style.display = "none";
                fullHeart.style.display = "inline-block";
                }

                function changeToEmpty() 
                {
                fullHeart.style.display = "none";
                emptyHeart.style.display = "inline-block";
                }

                emptyHeart.addEventListener('click', changeToFull);
                fullHeart.addEventListener('click', changeToEmpty);
            </script>


<!-- Script pour afficher le modal-->
<script>
  // Get the modal
  var modal = document.getElementById("myModal");

  var modalImg = document.getElementById("img01");


  // Get the image and insert it inside the modal - use its "alt" text as a caption
  var galleryImages = document.querySelectorAll(".img-gallery img");

  galleryImages.forEach((image) => {
    image.addEventListener("click", handleClick);
  });

  function handleClick(evt) {
    modal.style.display = "block";
    modalImg.src = this.src;
    //captionText.innerHTML = this.alt;
    evt.currentTarget
  }

  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  // When the user clicks on <span> (x), close the modal
  modal.onclick = function () {
    modal.style.display = "none";
  }
</script>

<!-- Script pour afficher une maps -->
<script>
  let latitude = document.getElementById('mapid').dataset.latitude;
  let longitude = document.getElementById('mapid').dataset.longitude;
  console.log(latitude + ' ' + longitude);
  //https://leafletjs.com/examples/quick-start/
  let mymap = L.map('mapid').setView([latitude, longitude], 10);
  console.log(mymap)


  // Token here : https://account.mapbox.com/

  L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoid2VseXdlbG9vIiwiYSI6ImNrYmFmYXdyYjBubGwycW84ZWJxYWk1MXAifQ.0HxMbJuY3rmSYfS2hmhcVw', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox/streets-v11',
    tileSize: 512,
    zoomOffset: -1,
    accessToken: 'pk.eyJ1Ijoid2VseXdlbG9vIiwiYSI6ImNrYmFmYXdyYjBubGwycW84ZWJxYWk1MXAifQ.0HxMbJuY3rmSYfS2hmhcVw'
  }).addTo(mymap);

  let marker = L.marker([latitude, longitude]).addTo(mymap);

</script>

<!-- Script pour indiquer le nom de l'image dans l'input du form -->
<script>


  if (document.querySelector('form')) {
    document.getElementById('review_text').setAttribute('placeholder', 'C\'était génial, best trip ever!');


    if (document.querySelector('form')) {
      document.getElementById('review_text').setAttribute('placeholder', 'C\'était génial, best trip ever!');

      document.getElementById('review_title').setAttribute('placeholder', 'Un été à Paris');

      let input = document.getElementById('review_imageFile');

      document.querySelector('.custom-file-label').textContent = 'la_tour_eiffel.jpg';

      let fileName = '';
      input.onchange = function () {
        let name = document.querySelector('.custom-file-label').textContent = this.value.slice(12, this.value.length);
        if (name.length > 20) {
          fileName = name.slice(12, 20) + '...' + name.slice(name.length - 8, name.length);
          document.querySelector('.custom-file-label').textContent = fileName;
        }
      }
    }

  }

</script>


<script>
  if (document.querySelector('form')) {
    document.getElementById('review_text').setAttribute('placeholder', 'C\'était génial, best trip ever!');


    document.getElementById('review_title').setAttribute('placeholder', 'Un été à Paris');

    let input = document.getElementById('review_imageFile');

    document.querySelector('.custom-file-label').textContent = 'la_tour_eiffel.jpg';

    let fileName = '';
    input.onchange = function () {
      let name = document.querySelector('.custom-file-label').textContent = this.value.slice(12, this.value.length);
      if (name.length > 20) {
        fileName = name.slice(12, 20) + '...' + name.slice(name.length - 8, name.length);
        document.querySelector('.custom-file-label').textContent = fileName;
      }
    };
  }
</script>

<!-- Script pour le signalement d'un avis -->
<script>

let reviewButtons = document.querySelectorAll('.report-review-button');
reviewButtons.forEach(
  function(reviewButton)
  {
    reviewButton.addEventListener('click', handleReportReview);
  }
)

function handleReportReview(evt)
{
    evt.preventDefault();
    const url = this.href;
    let span = evt.target.closest('.span-review');

    fetch(url, {
      method: 'POST',
      headers : { 
        'Content-Type': 'application/json',
        'Accept': 'application/json'
       }
      }).then(
      (response) => {
          if(response.status == 202) 
          {
            console.log(response.status + ' - opération effectuée')
          }
          else if(response.status === 204)
          {
            console.log(response.status + ' - pas de resultats')
          }
          else 
          {
            console.log(response.status + 'L\'opération a échoué')
          }
      })
  .then(
      (data) => {
              
              span.textContent = 'L\'avis est signalé. Merci !';
   
      }
  );
}

</script>


<!-- Script pour le like d'un avis -->
<script>

let reviewVoteSpans = document.querySelectorAll('.review-vote');
let reviewId = '';
let spanRate = '';

reviewVoteSpans.forEach(
  function (reviewVoteSpan) 
  {

    let heart = reviewVoteSpan.querySelector('i');
  
    heart.addEventListener('click', changeHeart);

    spanRate = document.querySelector('.span-rate');
    spanRate.textContent = parseInt(document.querySelector('.span-rate').dataset.likescount);
    
  }
);

function changeHeart(evt) 
{
    reviewId = evt.target.dataset.reviewid;
    evt.preventDefault();
    let url = '/api/v1/review/'+ reviewId +'/like'

      fetch(url, {
        method: 'POST',
        headers : { 
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
        })
        .then(
        (response) => {

            if(response.status == 200) 
            {
              console.log(response.status + ' - opération effectuée');
              return response.json();
            }
            else 
            {
              console.log(response.status + 'L\'opération a échoué');
            }
        })
        .then(
          (data) => {

                let icone = evt.target;
                parentSpan = evt.target.parentNode.parentNode;
                parentSpan.querySelector('.span-rate').innerText = data.likes;

                if (icone.classList.contains('fa-heart-o'))
                {
                  icone.setAttribute("class", "em em-heart");
                }
                else 
                {
                  icone.setAttribute("class", "fa fa-heart-o");
                }

          }
        );

}
</script>

<!-- Script pour le like d'une ville -->
<script>

let divCityLike = document.querySelector('.city-likes');
let cityId = divCityLike.dataset.cityid;

let heart = divCityLike.querySelector('i');
heart.addEventListener('click', changeHeart);

function changeHeart(evt) 
{
    evt.preventDefault();
    let url = '/api/v1/city/'+ cityId +'/like'

      fetch(url, {
        method: 'POST',
        headers : { 
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
        })
        .then(
        (response) => {

            if(response.status == 200) 
            {
              console.log(response.status + ' - opération effectuée');
              return response.json();
            }
            else 
            {
              console.log(response.status + 'L\'opération a échoué');
            }
        })
        .then(
          (data) => {

                let icone = evt.target;

                if (icone.classList.contains('fa-heart-o'))
                {
                  icone.setAttribute("class", "em em-heart");
                }
                else 
                {
                  icone.setAttribute("class", "fa fa-heart-o");
                }

          }
        );

}



</script>

<script>
// Translatation of the summary

  let apiKey = '';
  let summary = document.querySelector('.city-description').dataset.summary;


  summary = summary.replace(/(<([^>]+)>)/ig,"");
  

  let firstTranslation = {};
  fetch('/api/v1/translate/', {
  method: 'POST',
  body: JSON.stringify(summary),
	headers: {
		'Content-type': 'application/json',
	}
}).then(function (response) {
	if (response.ok) {
		return response.json();
	}
	return Promise.reject(response);
}).then(function (data) {
	//console.log(data);
  document.querySelector('.city-description').innerHTML = '<br>'+data.Translation;
  
}).catch(function (error) {
	console.warn('Something went wrong.', error);
});

//Cette ligne permet de récupérer d'insérer le paragraphe dans la div concernée (fonctionne en console)
//document.querySelector('.city-description').innerHTML = firstTranslation.data.translations[0].translatedText;
//document.querySelector('.city-description').innerHTML = firstTranslation.Translation;
//console.log(data)

</script>
{% endblock %}
